{"name": "test_login_with_valid_credential", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"css selector\",\"selector\":\".post-title\"}\n  (Session info: chrome=122.0.6261.95); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nStacktrace:\n\tGetHandleVerifier [0x00007FF7DCC7AD22+56930]\n\t(No symbol) [0x00007FF7DCBEF622]\n\t(No symbol) [0x00007FF7DCAA42E5]\n\t(No symbol) [0x00007FF7DCAE98ED]\n\t(No symbol) [0x00007FF7DCAE9A2C]\n\t(No symbol) [0x00007FF7DCB2A967]\n\t(No symbol) [0x00007FF7DCB0BCDF]\n\t(No symbol) [0x00007FF7DCB281E2]\n\t(No symbol) [0x00007FF7DCB0BA43]\n\t(No symbol) [0x00007FF7DCADD438]\n\t(No symbol) [0x00007FF7DCADE4D1]\n\tGetHandleVerifier [0x00007FF7DCFF6AAD+3709933]\n\tGetHandleVerifier [0x00007FF7DD04FFED+4075821]\n\tGetHandleVerifier [0x00007FF7DD04817F+4043455]\n\tGetHandleVerifier [0x00007FF7DCD19756+706710]\n\t(No symbol) [0x00007FF7DCBFB8FF]\n\t(No symbol) [0x00007FF7DCBF6AE4]\n\t(No symbol) [0x00007FF7DCBF6C3C]\n\t(No symbol) [0x00007FF7DCBE68F4]\n\tBaseThreadInitThunk [0x00007FFBAC0D257D+29]\n\tRtlUserThreadStart [0x00007FFBAD02AA58+40]", "trace": "self = <test_login.TestSearch object at 0x000001C10D01D580>\n\n    def test_login_with_valid_credential(self):\n        credentials = json_data['validCredentials']\n        assertions = json_data['assertionTexts']\n        self.lp.input_username(credentials['username'])\n        self.lp.input_password(credentials['password'])\n        self.lp.click_submit()\n>       self.lp.verify_success_login(assertions['successLoginText'])\n\nTests\\test_login.py:16: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nPages\\loginPage.py:51: in verify_success_login\n    success_text = self.driver.find_element(By.CSS_SELECTOR, successTextLocator).text\n.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:741: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\n.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:347: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x000001C10CCB6180>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"no such element: Unable to locate element: {\\...07FF7DCBE68F4]\\\\n\\\\tBaseThreadInitThunk [0x00007FFBAC0D257D+29]\\\\n\\\\tRtlUserThreadStart [0x00007FFBAD02AA58+40]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"css selector\",\"selector\":\".post-title\"}\nE         (Session info: chrome=122.0.6261.95); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nE       Stacktrace:\nE       \tGetHandleVerifier [0x00007FF7DCC7AD22+56930]\nE       \t(No symbol) [0x00007FF7DCBEF622]\nE       \t(No symbol) [0x00007FF7DCAA42E5]\nE       \t(No symbol) [0x00007FF7DCAE98ED]\nE       \t(No symbol) [0x00007FF7DCAE9A2C]\nE       \t(No symbol) [0x00007FF7DCB2A967]\nE       \t(No symbol) [0x00007FF7DCB0BCDF]\nE       \t(No symbol) [0x00007FF7DCB281E2]\nE       \t(No symbol) [0x00007FF7DCB0BA43]\nE       \t(No symbol) [0x00007FF7DCADD438]\nE       \t(No symbol) [0x00007FF7DCADE4D1]\nE       \tGetHandleVerifier [0x00007FF7DCFF6AAD+3709933]\nE       \tGetHandleVerifier [0x00007FF7DD04FFED+4075821]\nE       \tGetHandleVerifier [0x00007FF7DD04817F+4043455]\nE       \tGetHandleVerifier [0x00007FF7DCD19756+706710]\nE       \t(No symbol) [0x00007FF7DCBFB8FF]\nE       \t(No symbol) [0x00007FF7DCBF6AE4]\nE       \t(No symbol) [0x00007FF7DCBF6C3C]\nE       \t(No symbol) [0x00007FF7DCBE68F4]\nE       \tBaseThreadInitThunk [0x00007FFBAC0D257D+29]\nE       \tRtlUserThreadStart [0x00007FFBAD02AA58+40]\n\n.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:229: NoSuchElementException"}, "start": 1709472780638, "stop": 1709472791150, "uuid": "fbb4e538-8f28-41db-a570-05b88dd58c86", "historyId": "56f41559ea818ac01df4070e6b8c66cc", "testCaseId": "56f41559ea818ac01df4070e6b8c66cc", "fullName": "Tests.test_login.TestSearch#test_login_with_valid_credential", "labels": [{"name": "tag", "value": "@pytest.mark.usefixtures('setup_and_teardown')"}, {"name": "parentSuite", "value": "Tests"}, {"name": "suite", "value": "test_login"}, {"name": "subSuite", "value": "TestSearch"}, {"name": "host", "value": "DESKTOP-UEVTOM8"}, {"name": "thread", "value": "23260-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Tests.test_login"}]}